version: "3.9"

services:
  db:
    image: postgres:17
    container_name: alchemy_db
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - "${DB_PORT:-5432}:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 5s
      timeout: 5s
      retries: 10

  db_test:
    image: postgres:17
    container_name: alchemy_db_test
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_DB: ${DB_NAME_TEST}
    ports:
      - "${DB_PORT_TEST:-5433}:5432"
    volumes:
      - pg_data_test:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME_TEST}"]
      interval: 5s
      timeout: 5s
      retries: 10

  migrate:
    build: .
    container_name: alchemy_migrate
    command: alembic upgrade head
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASS}
      DB_NAME: ${DB_NAME}
      DB_ECHO: ${DB_ECHO:-0}
    depends_on:
      db:
        condition: service_healthy

  app:
    build: .
    container_name: alchemy_app
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - "8000:8000"
    env_file:
      - .env
    environment:
      DB_HOST: ${DB_HOST:-db}
      DB_PORT: ${DB_PORT:-5432}
    depends_on:
      migrate:
        condition: service_completed_successfully

volumes:
  pg_data:
  pg_data_test: